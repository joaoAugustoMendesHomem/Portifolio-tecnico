# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: microsoft/dotnet:latest
    steps:
      # Checkout the code as the first step.
      - checkout
      # Then simply use the dotnet container as you'd expect and run your tests
      - run:
          # Update this line with the directory that contains your tests project file
          working_directory: ~/project/App.Tests
          name: Run tests
          command: |
            dotnet test
            

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample: 
    jobs:
      - build-and-test#!/bin/bash
info=$(ls -ld $1)
permr=${info:1:}
permr=${info:2:1}
permx=${info:3:1}
if [[ $permr == "r" ]]
then
echo "O arquivo/diretorio $1 tem permissao para leitura"
else
echo "O arquivo/diretorio $1 nao tem permissao para leitura"
fi

if [[ $permw == ]]
then
echo "O arquivo/diretorio $1 tem permissao para escrita"
else
echo "O arquivo/diretorio $1 nao tem permissao para escrita"
fi
if [[ $permx == "x" ]]
then
echo "O arquivo/diretorio $1 tem permissao para execucao"
else
echo "O arquivo/diretorio $1 nao tem permissao para execucao"
fi
